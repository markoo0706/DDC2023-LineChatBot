# -*- coding: utf-8 -*-
"""Google_review_ChatGPT_ver2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RoQz752-1tWqytaWAB7fKDjhIn9Ig6Q8
"""

import requests
import time
import pickle

def getGoogleCommentChatGPTLabel(restaurant_info, MY_API_KEY = "":
  API_ENDPOINT = 'https://api.openai.com/v1/chat/completions'
  for key in restaurant_info.keys():
    # set question text
    text1 = '根據餐廳的評論，對餐廳提供一個國家料理類別：“台式料理”、“中式料理"、"美式料理"、"泰式料理"、"義式料理"、"日式料理"、"韓式料理"、"美式料理"、"法式料理"、"越式料理"。不用附理由，僅需以python dictionary的格式 {1:"X式料理"} 的格式簡短回答。'
    text2 = '餐廳的評論如下：'
    for i in range(5):
      text2 = text2 + '評論' + str(i+1) + ':' + restaurant_info[key]['review'][i]['text']
    text2 = text2.replace('\n', '')
    if len(text2) > 800:
      text2 = text2[:800]

    # set ChatGPT
    headers = {
      'Authorization': f'Bearer {MY_API_KEY}',
      'Content-Type': 'application/json'
    }
    data = {
        'messages':[
            {'role': 'system', 'content': text1},
            {'role': 'user', 'content': text2}
        ],
        'model': 'gpt-3.5-turbo'
    }
    time.sleep(15)
    response = requests.post(API_ENDPOINT, headers=headers, json=data)
    response_data = response.json()
    try:
      restaurant_info[key]['restaurant_label'] = response_data['choices'][0]['message']['content']
    except:
      restaurant_info[key]['restaurant_label'] = 'N'
    print(restaurant_info[key]['restaurant_label'])
    break
  return restaurant_info

def getGoogleCommentChatGPTAspect(restaurant_info, MY_API_KEY = ""):
  API_ENDPOINT = 'https://api.openai.com/v1/chat/completions'
  for key in list(restaurant_info.keys())[45:]:
    print(key)
    # set question text
    text1 = '根據餐廳的評論，對餐廳提供類別分數1到5分："食物品質", "服務品質","性價比","環境氛圍","衛生安全"。不用附理由，僅需以python dict的格式 {"食物品質": x, "服務品質": x,"性價比": x,"環境氛圍": x,"衛生安全": x} 的格式簡短回答。'
    text2 = '餐廳的評論如下：'
    for i in range(5):
      text2 = text2 + '評論:' + restaurant_info[key]['review'][i]['text']
    text2 = text2.replace('\n', '')
    if len(text2) > 800:
      text2 = text2[:800]

    # set ChatGPT
    headers = {
      'Authorization': f'Bearer {MY_API_KEY}',
      'Content-Type': 'application/json'
    }
    data = {
        'messages':[
            {'role': 'system', 'content': text1},
            {'role': 'user', 'content': text2}
        ],
        'model': 'gpt-3.5-turbo'
    }
    time.sleep(15)
    response = requests.post(API_ENDPOINT, headers=headers, json=data)
    response_data = response.json()
    print(response_data)
    try:
      restaurant_info[key]['restaurant_aspect'] = response_data['choices'][0]['message']['content']
    except:
      restaurant_info[key]['restaurant_aspect'] = {"食物品質": 3, "服務品質": 3,"性價比": 3,"環境氛圍": 3,"衛生安全": 3}
    print(restaurant_info[key]['restaurant_aspect'])
    # break
  return restaurant_info
